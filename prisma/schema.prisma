// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// relationがある値は渡さなくてよい。Prisma側で自動的に関連付けてくれる。

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int      @id @default(autoincrement())
  username String
  email    String   @unique
  password String
  posts    Post[]
  profile  Profile?
  followers Follow[] @relation("FollowerRelation")
  following Follow[] @relation("FollowingRelation")
  likes    Like[]
  reposts  Repost[]
}

model Post {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  authorId  Int
  author    User     @relation(fields: [authorId], references: [id])
  replies   Post[]   @relation("ReplyRelation")
  parentId  Int?     
  parent    Post?    @relation("ReplyRelation", fields: [parentId], references: [id])
  likes     Like[]
  mediaUrl  String?  // 画像や動画のURL
  reposts   Repost[]
}

model Profile {
  id              Int     @id @default(autoincrement())
  bio             String?
  profileImageUrl String?
  userId          Int     @unique
  user            User    @relation(fields: [userId], references: [id])
}

model Follow {
  id         Int  @id @default(autoincrement())
  followerId Int
  followingId Int

  follower   User @relation("FollowerRelation", fields: [followerId], references: [id])
  following  User @relation("FollowingRelation", fields: [followingId], references: [id])

  @@unique([followerId, followingId])
}

model Like {
  id      Int  @id @default(autoincrement())
  userId  Int
  postId  Int

  user    User @relation(fields: [userId], references: [id])
  post    Post @relation(fields: [postId], references: [id])

  @@unique([userId, postId])
}

model Repost{
  id      Int  @id @default(autoincrement())
  userId  Int
  postId  Int
  createdAt DateTime @default(now())

  user    User @relation(fields: [userId], references: [id])
  post    Post @relation(fields: [postId], references: [id])

  @@unique([userId, postId])
}